# Production Dockerfile
FROM golang:{{cookiecutter.go_version}}-alpine AS builder

# Install git and ca-certificates
RUN apk update && apk add --no-cache git ca-certificates tzdata && update-ca-certificates

# Create appuser
RUN adduser -D -g '' appuser

WORKDIR /build

# Copy go mod files
COPY go.mod go.sum ./
RUN go mod download
RUN go mod verify

# Copy source code
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -ldflags="-w -s" -a -installsuffix cgo -o {{cookiecutter.service_name}} ./cmd/server

# Final stage
FROM scratch

# Import ca-certificates from builder
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/
COPY --from=builder /etc/passwd /etc/passwd
COPY --from=builder /usr/share/zoneinfo /usr/share/zoneinfo

# Copy the binary and docs
COPY --from=builder /build/{{cookiecutter.service_name}} /go/bin/{{cookiecutter.service_name}}
COPY --from=builder /build/docs /docs

# Use unprivileged user
USER appuser

# Expose port
EXPOSE {{cookiecutter.server_port}}

# Run the application
ENTRYPOINT ["/go/bin/{{cookiecutter.service_name}}"]